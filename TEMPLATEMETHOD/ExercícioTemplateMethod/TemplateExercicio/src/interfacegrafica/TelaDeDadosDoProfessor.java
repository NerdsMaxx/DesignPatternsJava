/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfacegrafica;

import classededados.Professor;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.*;

/**
 *
 * @author guilherme
 */
public class TelaDeDadosDoProfessor extends javax.swing.JFrame {

    /**
     * Creates new form TelaDeDadosDoProfessor
     */
    public TelaDeDadosDoProfessor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDadosDosProfessores = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButtonOrdernarPorNome = new javax.swing.JButton();
        jButtonOrdernarPorMatricula = new javax.swing.JButton();
        jButtonOrdernarPorEscolaENome = new javax.swing.JButton();
        jButtonOrdernarPorTitulacaoENome = new javax.swing.JButton();
        jButtonOrdernarPorEscolaTitulacaoENome = new javax.swing.JButton();
        jButtonOrdernarPorTitulacaoEscolaENome = new javax.swing.JButton();
        jButtonApagar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableDadosDosProfessores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matrícula", "Nome", "Escola", "Titulação", "Tipo de contrato", "Data de contratação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableDadosDosProfessores);

        jLabel1.setFont(new java.awt.Font("Cantarell Extra Bold", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("DADOS DO PROFESSOR");

        jButtonOrdernarPorNome.setText("Nome");
        jButtonOrdernarPorNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdernarPorNomeActionPerformed(evt);
            }
        });

        jButtonOrdernarPorMatricula.setText("Matrícula");
        jButtonOrdernarPorMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdernarPorMatriculaActionPerformed(evt);
            }
        });

        jButtonOrdernarPorEscolaENome.setText("Escola e Nome");
        jButtonOrdernarPorEscolaENome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdernarPorEscolaENomeActionPerformed(evt);
            }
        });

        jButtonOrdernarPorTitulacaoENome.setText("Titulação e Nome");
        jButtonOrdernarPorTitulacaoENome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdernarPorTitulacaoENomeActionPerformed(evt);
            }
        });

        jButtonOrdernarPorEscolaTitulacaoENome.setText("Escola, Titulação e Nome");
        jButtonOrdernarPorEscolaTitulacaoENome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdernarPorEscolaTitulacaoENomeActionPerformed(evt);
            }
        });

        jButtonOrdernarPorTitulacaoEscolaENome.setText("Titulação, Escola e Nome");
        jButtonOrdernarPorTitulacaoEscolaENome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdernarPorTitulacaoEscolaENomeActionPerformed(evt);
            }
        });

        jButtonApagar.setText("Apagar");
        jButtonApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApagarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Cantarell Extra Bold", 2, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("ORDERNAR POR:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonOrdernarPorNome)
                                .addGap(77, 77, 77)
                                .addComponent(jButtonOrdernarPorEscolaENome))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonOrdernarPorMatricula)
                                .addGap(56, 56, 56)
                                .addComponent(jButtonOrdernarPorTitulacaoENome)))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonOrdernarPorTitulacaoEscolaENome)
                            .addComponent(jButtonOrdernarPorEscolaTitulacaoENome)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 853, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(326, 326, 326)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonApagar)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jButtonApagar)))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(14, 14, 14)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOrdernarPorNome)
                    .addComponent(jButtonOrdernarPorEscolaENome)
                    .addComponent(jButtonOrdernarPorEscolaTitulacaoENome))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOrdernarPorMatricula)
                    .addComponent(jButtonOrdernarPorTitulacaoENome)
                    .addComponent(jButtonOrdernarPorTitulacaoEscolaENome))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void imprimirNaGrid(Iterator dadosDosProfessores){
            DefaultTableModel model =  (DefaultTableModel) jTableDadosDosProfessores.getModel();
            
            int limit = model.getRowCount();
            for(int i=0;i<limit;i++){
                model.removeRow(0);
            }
            
            while(dadosDosProfessores.hasNext()){
                Professor objetoProfessor = (Professor)dadosDosProfessores.next();
                String[] linha = new String[6];
                linha[0] = String.valueOf(objetoProfessor.getMatricula());
                linha[1] = objetoProfessor.getNome();
                linha[2] = objetoProfessor.getEscola();
                linha[3] = objetoProfessor.getTitulacao();
                linha[4] = objetoProfessor.getTipoDeContrato();
                linha[5] = objetoProfessor.getDataDaContratacao();
                
                model.addRow(linha);
            }
    }
    
    private void jButtonOrdernarPorMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdernarPorMatriculaActionPerformed
        try{
            String nome = "./src/dados/ProfessoresDaEscola.csv";
            OrdenadoPorMatricula objeto = new OrdenadoPorMatricula(nome);
            imprimirNaGrid(objeto.listagemDeProfessoresOrdenados());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonOrdernarPorMatriculaActionPerformed

    private void jButtonApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApagarActionPerformed
            DefaultTableModel model =  (DefaultTableModel) jTableDadosDosProfessores.getModel();
            
            int limit = model.getRowCount();
            for(int i=0;i<limit;i++){
                model.removeRow(0);
            }
    }//GEN-LAST:event_jButtonApagarActionPerformed

    private void jButtonOrdernarPorNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdernarPorNomeActionPerformed
        try{
            String nome = "./src/dados/ProfessoresDaEscola.csv";
            OrdenadoPorNome objeto = new OrdenadoPorNome(nome);
            imprimirNaGrid(objeto.listagemDeProfessoresOrdenados());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonOrdernarPorNomeActionPerformed

    private void jButtonOrdernarPorEscolaENomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdernarPorEscolaENomeActionPerformed
        try{
            String nome = "./src/dados/ProfessoresDaEscola.csv";
            OrdenadoPorEscolaENome objeto = new OrdenadoPorEscolaENome(nome);
            imprimirNaGrid(objeto.listagemDeProfessoresOrdenados());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonOrdernarPorEscolaENomeActionPerformed

    private void jButtonOrdernarPorTitulacaoENomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdernarPorTitulacaoENomeActionPerformed
        try{
            String nome = "./src/dados/ProfessoresDaEscola.csv";
            OrdenadoPorTitulacaoENome objeto = new OrdenadoPorTitulacaoENome(nome);
            imprimirNaGrid(objeto.listagemDeProfessoresOrdenados());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonOrdernarPorTitulacaoENomeActionPerformed

    private void jButtonOrdernarPorEscolaTitulacaoENomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdernarPorEscolaTitulacaoENomeActionPerformed
        try{
            String nome = "./src/dados/ProfessoresDaEscola.csv";
            OrdenadoPorEscolaTitulacaoENome objeto = new OrdenadoPorEscolaTitulacaoENome(nome);
            imprimirNaGrid(objeto.listagemDeProfessoresOrdenados());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonOrdernarPorEscolaTitulacaoENomeActionPerformed

    private void jButtonOrdernarPorTitulacaoEscolaENomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdernarPorTitulacaoEscolaENomeActionPerformed
        try{
            String nome = "./src/dados/ProfessoresDaEscola.csv";
            OrdenadoPorTitulacaoEscolaENome objeto = new OrdenadoPorTitulacaoEscolaENome(nome);
            imprimirNaGrid(objeto.listagemDeProfessoresOrdenados());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonOrdernarPorTitulacaoEscolaENomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDeDadosDoProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDeDadosDoProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDeDadosDoProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDeDadosDoProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaDeDadosDoProfessor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApagar;
    private javax.swing.JButton jButtonOrdernarPorEscolaENome;
    private javax.swing.JButton jButtonOrdernarPorEscolaTitulacaoENome;
    private javax.swing.JButton jButtonOrdernarPorMatricula;
    private javax.swing.JButton jButtonOrdernarPorNome;
    private javax.swing.JButton jButtonOrdernarPorTitulacaoENome;
    private javax.swing.JButton jButtonOrdernarPorTitulacaoEscolaENome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDadosDosProfessores;
    // End of variables declaration//GEN-END:variables
}
