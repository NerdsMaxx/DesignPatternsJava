/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfacegrafica;

import classededados.Professor;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.ProfessorPersistencia;
import fabrica.FabricaDeCriterios;

/**
 *
 * @author guilherme
 */
public class Janela extends javax.swing.JFrame {

    private void imprimirNaGrid(Iterator dadosDosProfessores){
        DefaultTableModel model =  (DefaultTableModel) jTableDadosDosProfessores.getModel();
            
        int limit = model.getRowCount();
        for(int i=0;i<limit;i++){
            model.removeRow(0);
        }
            
        while(dadosDosProfessores.hasNext()){
            Professor objetoProfessor = (Professor)dadosDosProfessores.next();
            String[] linha = new String[6];
            linha[0] = String.valueOf(objetoProfessor.getMatricula());
            linha[1] = objetoProfessor.getNome();
            linha[2] = objetoProfessor.getEscola();
            linha[3] = objetoProfessor.getTitulacao();
            linha[4] = objetoProfessor.getTipoDeContrato();
            linha[5] = objetoProfessor.getDataDaContratacao();
                
            model.addRow(linha);
        }
    }
    
    /**
     * Creates new form Janela
     */
    public Janela() {
        initComponents();
        
        DefaultTableModel model =  (DefaultTableModel) jTableDadosDosProfessores.getModel();
            
        int limit = model.getRowCount();
        for(int i=0;i<limit;i++){
            model.removeRow(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxCriterios = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDadosDosProfessores = new javax.swing.JTable();
        jLabelOrdernarPor = new javax.swing.JLabel();
        jButtonLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBoxCriterios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Matricula", "Escola e nome", "Titulacao e nome", "Escola, titulação e nome", "Titulação, escola e nome" }));
        jComboBoxCriterios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCriteriosActionPerformed(evt);
            }
        });

        jTableDadosDosProfessores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Matricula", "Nome", "Escola", "Titulação", "Tipo de contrato", "Data de contração"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableDadosDosProfessores);

        jLabelOrdernarPor.setFont(new java.awt.Font("Liberation Sans", 2, 18)); // NOI18N
        jLabelOrdernarPor.setText("Ordernar por:");

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabelOrdernarPor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxCriterios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonLimpar)
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCriterios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelOrdernarPor)
                    .addComponent(jButtonLimpar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxCriteriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCriteriosActionPerformed
        try {
            String[] criterios = {"Nome", "Matricula", "EscolaENome", "TitulacaoENome", "EscolaTitulacaoENome", "TitulacaoEscolaENome"};
            String tipoDeCriterio = criterios[jComboBoxCriterios.getSelectedIndex()];
        
            ProfessorPersistencia dados = new ProfessorPersistencia("./src/dados/ProfessoresDaEscola.csv",FabricaDeCriterios.getCriterio(tipoDeCriterio));
        
            imprimirNaGrid(dados.listagemDeProfessoresOrdenados());
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jComboBoxCriteriosActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        DefaultTableModel model =  (DefaultTableModel) jTableDadosDosProfessores.getModel();
            
        int limit = model.getRowCount();
        for(int i=0;i<limit;i++){
            model.removeRow(0);
        }
    }//GEN-LAST:event_jButtonLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Janela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JComboBox<String> jComboBoxCriterios;
    private javax.swing.JLabel jLabelOrdernarPor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDadosDosProfessores;
    // End of variables declaration//GEN-END:variables
}
